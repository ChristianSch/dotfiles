if &shell =~# 'fish$'
    set term=xterm-256color
endif

set shell=bash\ -l

execute pathogen#infect()
call pathogen#helptags()

" auto reload .vimrc (http://www.bestofvim.com/tip/auto-reload-your-vimrc/)
augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " "}"

" prevent weird errors on start up
set viminfo='20,<50,s10
'
" indentLine
"let g:indentLine_char = '¦'

" indent guides
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size= 1

filetype plugin indent on

" activate matchit for julia block support
runtime macros/matchit.vim

" fonts
" set guifont=Meslo\ LG\ S\ Regular\ for\ Powerline:h12
" set guifont=Source\ Code\ Pro\ for\ Powerline:h12
set guifont=Fira\ Code:h12
" set guifont=Hasklig:h12
" set guifont=Envy\ Code\ R\ for\ Powerline:h12

" Make Vim more useful
set nocompatible

" for patched code ligature fonts
set macligatures


" Use the OS clipboard by default (on versions compiled with `+clipboard`)
" ?

" Set color scheme!¬
" colorscheme gruvbox
" colorscheme flattown
" colorscheme lumberjack
" colorscheme railscasts
" colorscheme tomorrow-night
" colorscheme sourcerer
" colorscheme wattslandia
colorscheme codeschool

let g:colors_name = "codeschool"
let g:airline_theme = "wombat"

let g:NERDTreeWinPos = "right"
set guioptions-=T " Removes top toolbar
set guioptions-=r " Removes right hand scroll bar
set go-=L " Removes left hand scroll bar

if (exists('+colorcolumn'))
    set colorcolumn=90
    highlight ColorColumn ctermbg=9
endif

set textwidth=80
set background=dark " light "dark

let g:rainbow_active = 1 " 0 if you want to enable it later via :RainbowToggle

" handlebars/mustache
let g:mustache_abbreviations = 1

" startify
let g:startify_bookmarks = [ '~/.vimrc', '~/Documents/Development/', '~/Documents/Development/feel.yt/feelyt-app/', '~/Documents/Thesis/Thesis' ]

" start Startify and NERDTree on startup
autocmd VimEnter *
    \   if !argc()
    \ |   Startify
    \ |   NERDTree
    \ |   wincmd w
    \ | endif

" tagbar
let g:tagbar_ctags_bin='/usr/local/Cellar/ctags/5.8/bin/ctags' " ctags location by homebrew
nmap <F8> :TagbarToggle<CR>

" powerline
let g:airline_powerline_fonts = 1

" show the `tabline` at the top
let g:airline#extensions#tabline#enabled = 1

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'
" let g:airline_theme='wombat'

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" we need to tell syntastic what javascript checker to use
let g:syntastic_javascript_checkers = ['jshint']

" ctrlp.vim
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Linux/MacOSX
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*node_modules/*,*bower_components/*

" NERD tree
autocmd vimenter * NERDTree

" latex live preview
let g:livepreview_previewer = 'zathura'
" plugins done

" buffer switching
set hidden " allow leaving of modified buffers without saving

" set shortcuts for buffer cycling
nnoremap <C-x> :bnext<CR>
nnoremap <C-y> :bprevious<CR>

set clipboard=unnamed
" Enhance command-line completion
set wildmenu
" Allow cursor keys in insert mode
set esckeys
" Allow backspace in insert mode
set backspace=indent,eol,start
" Optimize for fast terminal connections
set ttyfast
" Add the g flag to search/replace by default
set gdefault
" Use UTF-8 without BOM
set encoding=utf-8 nobomb
" Change mapleader
let mapleader=","
" Don’t add empty newlines at the end of files
set binary
set noeol
" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps

if exists("&undodir")
        set undodir=~/.vim/undo
endif

" MacVim
if has("gui_macvim")
    set antialias       " MacVim: smooth fonts.
    set encoding=utf-8  " MacVim: use UTF-8 everywhere.
    set guioptions-=T   " MacVim: hide toolbar.
    set guioptions-=L   " MacVim: hide left scrollbar.
    set vb              " MacVim: disable audible bell
    set showtabline=2
endif

set viminfo+=! " make sure vim history works
map <C-J> <C-W>j<C-W>_ " open and maximize the split below
map <C-K> <C-W>k<C-W>_ " open and maximize the split above
set wmh=0 " reduces splits to a single line

" Enable per-directory .vimrc files and disable unsafe commands in them
set exrc
set secure
" Enable syntax highlighting
syntax on
" Highlight current line
set cursorline

" Make tabs as wide as four spaces
set tabstop=4
set expandtab
set shiftwidth=4

set softtabstop=4
set autoindent

" Enable line numbers
set number
" Show “invisible” characters
" set lcs=tab:\¦\ ,trail:·,eol:¬,nbsp:_
"set list
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line
set laststatus=2
" Respect modeline in files
set modeline
set modelines=4
" Enable mouse in all modes
set mouse=a
" Disable error bells
set noerrorbells
" Don’t reset cursor to start of line when moving around.
set nostartofline
" Show the cursor position
set ruler
" Don’t show the intro message when starting Vim
set shortmess=atI
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the (partial) command as it’s being typed
set showcmd

" Start scrolling three lines before the horizontal window border
set scrolloff=5

" Always show line numbers, but only in current window.
"set number
":au WinEnter * :setlocal number
":au WinLeave * :setlocal nonumber

" Strip trailing whitespace (,ss)
function! StripWhitespace()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    :%s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>
" Save a file as root (,W)
noremap <leader>W :w !sudo tee % > /dev/null<CR>

let g:go_path = "/Users/nexus/go"
let g:go_bin_path = "/Users/nexus/go/bin"

" Automatic commands
if has("autocmd")
    " Enable file type detection
    filetype on

    " Treat .json files as .js
    autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript

    " sass, css folding
    autocmd BufRead,BufNewFile *.css,*.scss,*.less setlocal foldmethod=marker foldmarker={,}

    " html folding
    autocmd BufRead,BufNewFile *.html,*.htm setlocal foldmethod=indent
endif